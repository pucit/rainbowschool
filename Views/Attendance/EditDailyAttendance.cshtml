@model School_Management_System.Models.AttendanceInfo
@using School_Management_System.Models

<h2>Edit Attendance</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="../../Scripts/jquery-1.5.1.min.js" type="text/javascript"></script>


@using (Html.BeginForm("SaveAttendance", "Attendance", Model,FormMethod.Post, null))
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>AttendanceInfo</legend>

        <div class="editor-label">
            Id
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.teacherId)
        </div>

        <div class="editor-label">
            Name
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.teacherName)
        </div>
        <div class="editor-label">
            Status
        </div>
        <div class="editor-field">
            @{
    List<SelectListItem> list = new List<SelectListItem>();
    SelectListItem sl1 = new SelectListItem();
    if (!Model.isPresent.Equals("Holiday") && !Model.isPresent.Equals("Leave")) 
    { sl1.Selected = true; }
    sl1.Text = "P";
    list.Add(sl1);
    SelectListItem sl2 = new SelectListItem();
    if (Model.isPresent.Equals("Holiday")) { sl2.Selected = true; }
    sl2.Text = "H";
    list.Add(sl2);
    SelectListItem sl3 = new SelectListItem();
    if (Model.isPresent.Equals("Leave")) { sl3.Selected = true; }
    sl3.Text = "L";
    list.Add(sl3);
            }
            @Html.DropDownListFor(model => model.isPresent, list)
        </div>
        @{
    List<SelectListItem> hoursList = new List<SelectListItem>();
    List<SelectListItem> minsList = new List<SelectListItem>();
    List<SelectListItem> hoursList1 = new List<SelectListItem>();
    List<SelectListItem> minsList1 = new List<SelectListItem>();
    DateTime today = new DateTime();
    TimeSpan? startTime;
    TimeSpan? endTime;
    if (today.ToUniversalTime().AddHours(5).Date.DayOfWeek == DayOfWeek.Friday)
    {
        startTime = (from time in new schooldbEntities().timings
                     select time).Where<timing>
                              (timeToPick => timeToPick.TimingsId == 2)
                              .FirstOrDefault<timing>().TimeIn;
        endTime = (from time in new schooldbEntities().timings
                   select time).Where<timing>
                              (timeToPick => timeToPick.TimingsId == 2)
                              .FirstOrDefault<timing>().TimeOut;
    }
    else
    {
        startTime = (from time in new schooldbEntities().timings
                     select time).Where<timing>
                              (timeToPick => timeToPick.TimingsId == 1)
                              .FirstOrDefault<timing>().TimeIn;
        endTime = (from time in new schooldbEntities().timings
                   select time).Where<timing>
                              (timeToPick => timeToPick.TimingsId == 1)
                              .FirstOrDefault<timing>().TimeOut;
    }
    for (int i = 0; i < 10; i++)
    {

        hoursList.Add(new SelectListItem { Value = i.ToString(), Text = "0" + i.ToString(), Selected = startTime.Value.Hours == i });
        minsList.Add(new SelectListItem { Value = i.ToString(), Text = "0" + i.ToString(), Selected = startTime.Value.Minutes == i });
        hoursList1.Add(new SelectListItem { Value = i.ToString(), Text = "0" + i.ToString(), Selected = endTime.Value.Hours == i });
        minsList1.Add(new SelectListItem { Value = i.ToString(), Text = "0" + i.ToString(), Selected = endTime.Value.Minutes == i });
    }
    for (int i = 10; i < 24; i++)
    {
        hoursList.Add(new SelectListItem { Value = i.ToString(), Text = i.ToString(), Selected = startTime.Value.Hours == i });
        minsList.Add(new SelectListItem { Value = i.ToString(), Text = i.ToString(), Selected = startTime.Value.Minutes == i });
        hoursList1.Add(new SelectListItem { Value = i.ToString(), Text = i.ToString(), Selected = endTime.Value.Hours == i });
        minsList1.Add(new SelectListItem { Value = i.ToString(), Text = i.ToString(), Selected = endTime.Value.Minutes == i });
    }
    for (int i = 25; i < 60; i++)
    {
        minsList.Add(new SelectListItem { Value = i.ToString(), Text = i.ToString(), Selected = startTime.Value.Minutes == i });
        minsList1.Add(new SelectListItem { Value = i.ToString(), Text = i.ToString(), Selected = endTime.Value.Minutes == i });
    }  
            }
            <p></p>
        <div id="timings">
            <div>Time In</div>
            <div>
               @Html.DropDownListFor(model => model.enterHour, hoursList) : 
               @Html.DropDownListFor(model => model.enterMinute, minsList)
            </div>
            <p></p>
            <div>Time Out</div>
            <div>
               @Html.DropDownListFor(model => model.exitHour, hoursList1) : 
               @Html.DropDownListFor(model => model.exitMinute, minsList1) 
            </div>
        </div>
        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<script type="text/javascript">

    $(document).ready(function () {
        var status1 = $('#isPresent').val();
        if (status1 == "P")
            $("#timings").show();
        else
            $("#timings").hide();
        $('#isPresent').change(function () {
            var status = $('#isPresent').val();
            if (status == "P")
                $("#timings").show();
            else
                $("#timings").hide();
        });

    });

</script>
