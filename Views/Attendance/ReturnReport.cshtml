@using School_Management_System.Models
<script src="../../Scripts/jquery-1.5.1.min.js" type="text/javascript"></script>
<h2>
    Monthly Report
</h2>
<div>
    
    @{
        int halfDay = 0;
        int absent = 0;
        int late = 0;
        int leave = 0;
        
        timing fridayTiming = (from t in new schooldbEntities().timings
                         select t).Where<timing>(time => time.TimingsId == 2).FirstOrDefault<timing>();
        timing otherTiming = (from t in new schooldbEntities().timings
                         select t).Where<timing>(time => time.TimingsId == 1).FirstOrDefault<timing>();
    }
    
    ID:
    @ViewBag.teacher.teacherId
    <br/>
    Name:
    @ViewBag.teacher.TeacherName
    <br/>
    Reporting Month:
    @ViewBag.month, 
    @ViewBag.year
    @{
        
        List<attendance> attList = ViewBag.attendanceList;
        List<attendance> currentAttendance = (from attendance1 in attList
                                              select attendance1)
                                                              .Where<attendance>(t => t.teacherId == ViewBag.teacher.teacherId).ToList<attendance>();
        for(int i=1; i<32; i++)
        {
            try
            {
                
                DateTime dt = new DateTime(ViewBag.year, ViewBag.month, i);
                int temp = 0;
                if (!((temp = DateTime.Compare(dt, DateTime.Now.ToUniversalTime().AddHours(5))) < 0))
                {
                    break;
                }
                if(dt.DayOfWeek != DayOfWeek.Sunday)
                {
                    attendance a = (from attend in currentAttendance
                                    select attend).Where<attendance>(ate => ate.AttendanceDate.Date == dt.Date).FirstOrDefault<attendance>();
                    if (a == null)
                    {
                        absent++;
                    }
                    else if (a.IsPresent.Equals("L")){
                        leave++;
                    }
                    else if (dt.DayOfWeek == DayOfWeek.Friday)
                    {

                        try
                        {
                            double diff = a.AttendanceDate.TimeOfDay.TotalMinutes - fridayTiming.TimeIn.Value.TotalMinutes;
                            if (diff > 0 && diff < 15)
                            {
                                late++;
                            }
                            if (diff >= 15 && diff < 30)
                            {
                                late = late + 2;
                            }
                            if (diff >= 30)
                            {
                                halfDay++;
                            }
                        }
                        catch (Exception ex)
                        {
                        }

                    }
                    else
                    {

                        try
                        {
                            double diff = a.AttendanceDate.TimeOfDay.TotalMinutes - otherTiming.TimeIn.Value.TotalMinutes;
                            if (diff > 0 && diff < 15)
                            {
                                late++;
                            }
                            if (diff >= 15 && diff < 30)
                            {
                                late = late + 2;
                            }
                            if (diff >= 30)
                            {
                                halfDay++;
                            }
                        }
                        catch (Exception ex)
                        {
                        }
                    }                                         
                }
            }
            catch(ArgumentOutOfRangeException ex)
            {
                break;
            }
            
        }
    }

    <table>
        <tr>
            <th>
                Category
            </th>
            <th>
                Count
            </th>
            <th>
                Deduction
            </th>
        </tr>
        <tr>
            <td>
                Absent
            </td>
            <td>
                @absent
            </td>
            <td>
            @{
                teacher teach = ViewBag.teacher;
                }
                @absent
                &nbsp * &nbsp @(teach.BasicSalary/30)
                &nbsp = &nbsp  @(absent *  (teach.BasicSalary/30) * 2)
            </td>
        </tr>
        <tr>
            <td>
                Late
            </td>
            <td>
                @late
            </td>
            <td>
                @(late/4)
                &nbsp * &nbsp @(teach.BasicSalary/30)
                &nbsp = &nbsp @((late/4) *  (teach.BasicSalary/30))
            </td>
        </tr>
        <tr>
            <td>
                Leave
            </td>
            <td>
                @leave
            </td>
            <td>
                @leave
                &nbsp * &nbsp @(teach.BasicSalary/30)
                &nbsp = &nbsp @(leave *  (teach.BasicSalary/30))
            </td>
        </tr>
        <tr>
            <td>
                Half Days
            </td>
            <td>
                @halfDay
            </td>
            <td>
                @halfDay
                &nbsp * &nbsp @(teach.BasicSalary/30/2)
                    &nbsp = &nbsp @(halfDay *  (teach.BasicSalary/30/2))
            </td>
        </tr>
        <tr>
            <td colspan="4">
                Total Deduction = @((halfDay * (teach.BasicSalary / 30 / 2)) + (leave * (teach.BasicSalary / 30)) + ((late / 4) * (teach.BasicSalary / 30)) + (absent * (teach.BasicSalary / 30) * 2))
            </td>
        </tr>
        <tr>
            <td colspan="4">
                @if (leave == 0 && absent == 0 && halfDay == 0 && late <= 1)
                {
                     @:Monthly Bonus = @(teach.BasicSalary / 30)  
                }
            </td>
        </tr>
    </table>

</div>

