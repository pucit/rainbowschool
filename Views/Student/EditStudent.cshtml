@model School_Management_System.Models.student

@{
    ViewBag.Title = "EditStudent";
}

<h2>EditStudent</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>student</legend>

        @Html.HiddenFor(model => model.studentId)

        <div class="editor-label">
            @Html.LabelFor(model => model.DateOfAdmission)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DateOfAdmission)
            @Html.ValidationMessageFor(model => model.DateOfAdmission)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EducationMedium)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.EducationMedium, new SelectList(@ViewBag.mediumList, "Text"), "-- Select Medium--")
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StudentName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StudentName)
            @Html.ValidationMessageFor(model => model.StudentName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StudentGender)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.StudentGender, new SelectList(@ViewBag.genderList, "Text"), "-- Select Gender --")
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StudyClass)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.classId, new SelectList(@ViewBag.classList, "classId", "className"), "-- Select Class--")
        </div>

        <div class="editor-label">
            @Html.Label("Section")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.StudyClass, new SelectList(@ViewBag.sectionList, "Text"), "-- Select Section--")
        </div>


        <div class="editor-label">
            @Html.LabelFor(model => model.StudentDOB)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StudentDOB)
            @Html.ValidationMessageFor(model => model.StudentDOB)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StudentAddress)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StudentAddress)
            @Html.ValidationMessageFor(model => model.StudentAddress)
        </div>
                
        <div class="editor-label">
            @Html.LabelFor(model => model.CellPhone)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CellPhone)
            @Html.ValidationMessageFor(model => model.CellPhone)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StudentRollNumber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StudentRollNumber)
            @Html.ValidationMessageFor(model => model.StudentRollNumber)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StudentFee)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StudentFee)
            @Html.ValidationMessageFor(model => model.StudentFee)
        </div>
                
        <div class="editor-label">
            @Html.LabelFor(model => model.familyId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.familyId)
            @Html.ValidationMessageFor(model => model.familyId)
        </div>  
        
        <div class="editor-label">
            @Html.LabelFor(model => model.StudentStatus)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.StudentStatus, new SelectList(@ViewBag.statusList, "Text"), "-- Select Status--")
            '1' Active | '0' Non-Active
        </div>    

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to MANAGE STUDENTS", "StudentViewMenu")
</div>

